/*
 * This file automatically generated by shim.py.

 * EDIT AT YOUR PERIL.
 */
/*
 * Parameter structs needs to be defined before
 * they can be included in the union.  We define
 * the structs here.
 */
	struct MPI_Dummy_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
	};

	struct MPI_Accumulate_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *origin_addr;
		int origin_count;
		MPI_Datatype origin_datatype;
		int target_rank;
		MPI_Aint target_disp;
		int target_count;
		MPI_Datatype target_datatype;
		MPI_Op op;
		MPI_Win win;
	};

	struct MPI_Add_error_class_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *errorclass;
	};

	struct MPI_Add_error_code_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int errorclass;
		int *errorcode;
	};

	struct MPI_Add_error_string_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int errorcode;
		char *string;
	};

	struct MPI_Address_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *location;
		MPI_Aint *address;
	};

	struct MPI_Allgather_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int sendcount;
		MPI_Datatype sendtype;
		void *recvbuf;
		int recvcount;
		MPI_Datatype recvtype;
		MPI_Comm comm;
	};

	struct MPI_Allgatherv_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int sendcount;
		MPI_Datatype sendtype;
		void *recvbuf;
		int *recvcounts;
		int *displs;
		MPI_Datatype recvtype;
		MPI_Comm comm;
	};

	struct MPI_Alloc_mem_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Aint size;
		MPI_Info info;
		void *baseptr;
	};

	struct MPI_Allreduce_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		void *recvbuf;
		int count;
		MPI_Datatype datatype;
		MPI_Op op;
		MPI_Comm comm;
	};

	struct MPI_Alltoall_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int sendcount;
		MPI_Datatype sendtype;
		void *recvbuf;
		int recvcount;
		MPI_Datatype recvtype;
		MPI_Comm comm;
	};

	struct MPI_Alltoallv_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int *sendcounts;
		int *sdispls;
		MPI_Datatype sendtype;
		void *recvbuf;
		int *recvcounts;
		int *rdispls;
		MPI_Datatype recvtype;
		MPI_Comm comm;
	};

	struct MPI_Alltoallw_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int *sendcounts;
		int *sdispls;
		MPI_Datatype *sendtypes;
		void *recvbuf;
		int *recvcounts;
		int *rdispls;
		MPI_Datatype *recvtypes;
		MPI_Comm comm;
	};

	struct MPI_Attr_delete_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int keyval;
	};

	struct MPI_Attr_get_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int keyval;
		void *attribute_val;
		int *flag;
	};

	struct MPI_Attr_put_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int keyval;
		void *attribute_val;
	};

	struct MPI_Barrier_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
	};

	struct MPI_Bcast_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buffer;
		int count;
		MPI_Datatype datatype;
		int root;
		MPI_Comm comm;
	};

	struct MPI_Bsend_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
	};

	struct MPI_Bsend_init_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Buffer_attach_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buffer;
		int size;
	};

	struct MPI_Buffer_detach_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buffer;
		int *size;
	};

	struct MPI_Cancel_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Request *request;
	};

	struct MPI_Cart_coords_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int rank;
		int maxdims;
		int *coords;
	};

	struct MPI_Cart_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm old_comm;
		int ndims;
		int *dims;
		int *periods;
		int reorder;
		MPI_Comm *comm_cart;
	};

	struct MPI_Cart_get_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int maxdims;
		int *dims;
		int *periods;
		int *coords;
	};

	struct MPI_Cart_map_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int ndims;
		int *dims;
		int *periods;
		int *newrank;
	};

	struct MPI_Cart_rank_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *coords;
		int *rank;
	};

	struct MPI_Cart_shift_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int direction;
		int disp;
		int *rank_source;
		int *rank_dest;
	};

	struct MPI_Cart_sub_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *remain_dims;
		MPI_Comm *new_comm;
	};

	struct MPI_Cartdim_get_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *ndims;
	};

	struct MPI_Close_port_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *port_name;
	};

	struct MPI_Comm_accept_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *port_name;
		MPI_Info info;
		int root;
		MPI_Comm comm;
		MPI_Comm *newcomm;
	};

	struct MPI_Comm_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
	};

	struct MPI_Comm_call_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int errorcode;
	};

	struct MPI_Comm_compare_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm1;
		MPI_Comm comm2;
		int *result;
	};

	struct MPI_Comm_connect_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *port_name;
		MPI_Info info;
		int root;
		MPI_Comm comm;
		MPI_Comm *newcomm;
	};

	struct MPI_Comm_create_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm_errhandler_fn *function;
		MPI_Errhandler *errhandler;
	};

	struct MPI_Comm_create_keyval_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm_copy_attr_function *comm_copy_attr_fn;
		MPI_Comm_delete_attr_function *comm_delete_attr_fn;
		int *comm_keyval;
		void *extra_state;
	};

	struct MPI_Comm_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		MPI_Group group;
		MPI_Comm *newcomm;
	};

	struct MPI_Comm_delete_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int comm_keyval;
	};

	struct MPI_Comm_disconnect_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm *comm;
	};

	struct MPI_Comm_dup_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		MPI_Comm *newcomm;
	};

	struct MPI_Comm_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_Comm rc;
		int comm;
	};

	struct MPI_Comm_free_keyval_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *comm_keyval;
	};

	struct MPI_Comm_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm *comm;
	};

	struct MPI_Comm_get_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int comm_keyval;
		void *attribute_val;
		int *flag;
	};

	struct MPI_Comm_get_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		MPI_Errhandler *erhandler;
	};

	struct MPI_Comm_get_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		char *comm_name;
		int *resultlen;
	};

	struct MPI_Comm_get_parent_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm *parent;
	};

	struct MPI_Comm_group_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		MPI_Group *group;
	};

	struct MPI_Comm_join_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int fd;
		MPI_Comm *intercomm;
	};

	struct MPI_Comm_rank_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *rank;
	};

	struct MPI_Comm_remote_group_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		MPI_Group *group;
	};

	struct MPI_Comm_remote_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *size;
	};

	struct MPI_Comm_set_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int comm_keyval;
		void *attribute_val;
	};

	struct MPI_Comm_set_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		MPI_Errhandler errhandler;
	};

	struct MPI_Comm_set_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		char *comm_name;
	};

	struct MPI_Comm_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *size;
	};

	struct MPI_Comm_spawn_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *command;
		char **argv;
		int maxprocs;
		MPI_Info info;
		int root;
		MPI_Comm comm;
		MPI_Comm *intercomm;
		int *array_of_errcodes;
	};

	struct MPI_Comm_spawn_multiple_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		char **array_of_commands;
		char ***array_of_argv;
		int *array_of_maxprocs;
		MPI_Info *array_of_info;
		int root;
		MPI_Comm comm;
		MPI_Comm *intercomm;
		int *array_of_errcodes;
	};

	struct MPI_Comm_split_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int color;
		int key;
		MPI_Comm *newcomm;
	};

	struct MPI_Comm_test_inter_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *flag;
	};

	struct MPI_Dims_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int nnodes;
		int ndims;
		int *dims;
	};

	struct MPI_Errhandler_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Errhandler errhandler;
	};

	struct MPI_Errhandler_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Handler_function *function;
		MPI_Errhandler *errhandler;
	};

	struct MPI_Errhandler_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_Errhandler rc;
		int errhandler;
	};

	struct MPI_Errhandler_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Errhandler *errhandler;
	};

	struct MPI_Errhandler_get_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		MPI_Errhandler *errhandler;
	};

	struct MPI_Errhandler_set_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		MPI_Errhandler errhandler;
	};

	struct MPI_Error_class_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int errorcode;
		int *errorclass;
	};

	struct MPI_Error_string_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int errorcode;
		char *string;
		int *resultlen;
	};

	struct MPI_Exscan_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		void *recvbuf;
		int count;
		MPI_Datatype datatype;
		MPI_Op op;
		MPI_Comm comm;
	};

	struct MPI_File_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File file;
	};

	struct MPI_File_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_File rc;
		int file;
	};

	struct MPI_File_call_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		int errorcode;
	};

	struct MPI_File_create_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File_errhandler_fn *function;
		MPI_Errhandler *errhandler;
	};

	struct MPI_File_set_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File file;
		MPI_Errhandler errhandler;
	};

	struct MPI_File_get_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File file;
		MPI_Errhandler *errhandler;
	};

	struct MPI_File_open_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		char *filename;
		int amode;
		MPI_Info info;
		MPI_File *fh;
	};

	struct MPI_File_close_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File *fh;
	};

	struct MPI_File_delete_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *filename;
		MPI_Info info;
	};

	struct MPI_File_set_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset size;
	};

	struct MPI_File_preallocate_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset size;
	};

	struct MPI_File_get_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset *size;
	};

	struct MPI_File_get_group_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Group *group;
	};

	struct MPI_File_get_amode_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		int *amode;
	};

	struct MPI_File_set_info_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Info info;
	};

	struct MPI_File_get_info_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Info *info_used;
	};

	struct MPI_File_set_view_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset disp;
		MPI_Datatype etype;
		MPI_Datatype filetype;
		char *datarep;
		MPI_Info info;
	};

	struct MPI_File_get_view_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset *disp;
		MPI_Datatype *etype;
		MPI_Datatype *filetype;
		char *datarep;
	};

	struct MPI_File_read_at_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_read_at_all_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_write_at_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_write_at_all_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_iread_at_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Request *request;
	};

	struct MPI_File_iwrite_at_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Request *request;
	};

	struct MPI_File_read_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_read_all_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_write_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_write_all_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_iread_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Request *request;
	};

	struct MPI_File_iwrite_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Request *request;
	};

	struct MPI_File_seek_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		int whence;
	};

	struct MPI_File_get_position_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset *offset;
	};

	struct MPI_File_get_byte_offset_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		MPI_Offset *disp;
	};

	struct MPI_File_read_shared_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_write_shared_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_iread_shared_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Request *request;
	};

	struct MPI_File_iwrite_shared_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Request *request;
	};

	struct MPI_File_read_ordered_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_write_ordered_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
		MPI_Status *status;
	};

	struct MPI_File_seek_shared_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		int whence;
	};

	struct MPI_File_get_position_shared_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset *offset;
	};

	struct MPI_File_read_at_all_begin_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		void *buf;
		int count;
		MPI_Datatype datatype;
	};

	struct MPI_File_read_at_all_end_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		MPI_Status *status;
	};

	struct MPI_File_write_at_all_begin_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Offset offset;
		void *buf;
		int count;
		MPI_Datatype datatype;
	};

	struct MPI_File_write_at_all_end_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		MPI_Status *status;
	};

	struct MPI_File_read_all_begin_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
	};

	struct MPI_File_read_all_end_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		MPI_Status *status;
	};

	struct MPI_File_write_all_begin_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
	};

	struct MPI_File_write_all_end_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		MPI_Status *status;
	};

	struct MPI_File_read_ordered_begin_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
	};

	struct MPI_File_read_ordered_end_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		MPI_Status *status;
	};

	struct MPI_File_write_ordered_begin_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		int count;
		MPI_Datatype datatype;
	};

	struct MPI_File_write_ordered_end_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		void *buf;
		MPI_Status *status;
	};

	struct MPI_File_get_type_extent_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		MPI_Datatype datatype;
		MPI_Aint *extent;
	};

	struct MPI_File_set_atomicity_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		int flag;
	};

	struct MPI_File_get_atomicity_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
		int *flag;
	};

	struct MPI_File_sync_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_File fh;
	};

	struct MPI_Finalize_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
	};

	struct MPI_Finalized_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *flag;
	};

	struct MPI_Free_mem_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *base;
	};

	struct MPI_Gather_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int sendcount;
		MPI_Datatype sendtype;
		void *recvbuf;
		int recvcount;
		MPI_Datatype recvtype;
		int root;
		MPI_Comm comm;
	};

	struct MPI_Gatherv_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int sendcount;
		MPI_Datatype sendtype;
		void *recvbuf;
		int *recvcounts;
		int *displs;
		MPI_Datatype recvtype;
		int root;
		MPI_Comm comm;
	};

	struct MPI_Get_address_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *location;
		MPI_Aint *address;
	};

	struct MPI_Get_count_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Status *status;
		MPI_Datatype datatype;
		int *count;
	};

	struct MPI_Get_elements_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Status *status;
		MPI_Datatype datatype;
		int *count;
	};

	struct MPI_Get_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *origin_addr;
		int origin_count;
		MPI_Datatype origin_datatype;
		int target_rank;
		MPI_Aint target_disp;
		int target_count;
		MPI_Datatype target_datatype;
		MPI_Win win;
	};

	struct MPI_Get_processor_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *name;
		int *resultlen;
	};

	struct MPI_Get_version_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *version;
		int *subversion;
	};

	struct MPI_Graph_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm_old;
		int nnodes;
		int *index;
		int *edges;
		int reorder;
		MPI_Comm *comm_graph;
	};

	struct MPI_Graph_get_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int maxindex;
		int maxedges;
		int *index;
		int *edges;
	};

	struct MPI_Graph_map_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int nnodes;
		int *index;
		int *edges;
		int *newrank;
	};

	struct MPI_Graph_neighbors_count_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int rank;
		int *nneighbors;
	};

	struct MPI_Graph_neighbors_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int rank;
		int maxneighbors;
		int *neighbors;
	};

	struct MPI_Graphdims_get_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *nnodes;
		int *nedges;
	};

	struct MPI_Grequest_complete_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Request request;
	};

	struct MPI_Grequest_start_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Grequest_query_function *query_fn;
		MPI_Grequest_free_function *free_fn;
		MPI_Grequest_cancel_function *cancel_fn;
		void *extra_state;
		MPI_Request *request;
	};

	struct MPI_Group_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group;
	};

	struct MPI_Group_compare_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group1;
		MPI_Group group2;
		int *result;
	};

	struct MPI_Group_difference_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group1;
		MPI_Group group2;
		MPI_Group *newgroup;
	};

	struct MPI_Group_excl_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group;
		int n;
		int *ranks;
		MPI_Group *newgroup;
	};

	struct MPI_Group_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_Group rc;
		int group;
	};

	struct MPI_Group_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group *group;
	};

	struct MPI_Group_incl_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group;
		int n;
		int *ranks;
		MPI_Group *newgroup;
	};

	struct MPI_Group_intersection_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group1;
		MPI_Group group2;
		MPI_Group *newgroup;
	};

	struct MPI_Group_rank_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group;
		int *rank;
	};

	struct MPI_Group_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group;
		int *size;
	};

	struct MPI_Group_translate_ranks_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group1;
		int n;
		int *ranks1;
		MPI_Group group2;
		int *ranks2;
	};

	struct MPI_Group_union_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group1;
		MPI_Group group2;
		MPI_Group *newgroup;
	};

	struct MPI_Ibsend_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Info_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
	};

	struct MPI_Info_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info *info;
	};

	struct MPI_Info_delete_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
		char *key;
	};

	struct MPI_Info_dup_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
		MPI_Info *newinfo;
	};

	struct MPI_Info_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_Info rc;
		int info;
	};

	struct MPI_Info_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info *info;
	};

	struct MPI_Info_get_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
		char *key;
		int valuelen;
		char *value;
		int *flag;
	};

	struct MPI_Info_get_nkeys_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
		int *nkeys;
	};

	struct MPI_Info_get_nthkey_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
		int n;
		char *key;
	};

	struct MPI_Info_get_valuelen_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
		char *key;
		int *valuelen;
		int *flag;
	};

	struct MPI_Info_set_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
		char *key;
		char *value;
	};

	struct MPI_Init_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *argc;
		char ***argv;
	};

	struct MPI_Initialized_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *flag;
	};

	struct MPI_Init_thread_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *argc;
		char ***argv;
		int required;
		int *provided;
	};

	struct MPI_Intercomm_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm local_comm;
		int local_leader;
		MPI_Comm bridge_comm;
		int remote_leader;
		int tag;
		MPI_Comm *newintercomm;
	};

	struct MPI_Intercomm_merge_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm intercomm;
		int high;
		MPI_Comm *newintercomm;
	};

	struct MPI_Iprobe_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int source;
		int tag;
		MPI_Comm comm;
		int *flag;
		MPI_Status *status;
	};

	struct MPI_Irecv_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int source;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Irsend_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Isend_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Issend_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Is_thread_main_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *flag;
	};

	struct MPI_Keyval_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Copy_function *copy_fn;
		MPI_Delete_function *delete_fn;
		int *keyval;
		void *extra_state;
	};

	struct MPI_Keyval_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *keyval;
	};

	struct MPI_Lookup_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *service_name;
		MPI_Info info;
		char *port_name;
	};

	struct MPI_Op_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Op op;
	};

	struct MPI_Op_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_User_function *function;
		int commute;
		MPI_Op *op;
	};

	struct MPI_Open_port_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Info info;
		char *port_name;
	};

	struct MPI_Op_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_Op rc;
		int op;
	};

	struct MPI_Op_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Op *op;
	};

	struct MPI_Pack_external_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *datarep;
		void *inbuf;
		int incount;
		MPI_Datatype datatype;
		void *outbuf;
		MPI_Aint outsize;
		MPI_Aint *position;
	};

	struct MPI_Pack_external_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *datarep;
		int incount;
		MPI_Datatype datatype;
		MPI_Aint *size;
	};

	struct MPI_Pack_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *inbuf;
		int incount;
		MPI_Datatype datatype;
		void *outbuf;
		int outsize;
		int *position;
		MPI_Comm comm;
	};

	struct MPI_Pack_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int incount;
		MPI_Datatype datatype;
		MPI_Comm comm;
		int *size;
	};

	struct MPI_Pcontrol_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int level;
	};

	struct MPI_Probe_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int source;
		int tag;
		MPI_Comm comm;
		MPI_Status *status;
	};

	struct MPI_Publish_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *service_name;
		MPI_Info info;
		char *port_name;
	};

	struct MPI_Put_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *origin_addr;
		int origin_count;
		MPI_Datatype origin_datatype;
		int target_rank;
		MPI_Aint target_disp;
		int target_count;
		MPI_Datatype target_datatype;
		MPI_Win win;
	};

	struct MPI_Query_thread_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *provided;
	};

	struct MPI_Recv_init_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int source;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Recv_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int source;
		int tag;
		MPI_Comm comm;
		MPI_Status *status;
	};

	struct MPI_Reduce_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		void *recvbuf;
		int count;
		MPI_Datatype datatype;
		MPI_Op op;
		int root;
		MPI_Comm comm;
	};

	struct MPI_Reduce_scatter_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		void *recvbuf;
		int *recvcounts;
		MPI_Datatype datatype;
		MPI_Op op;
		MPI_Comm comm;
	};

	struct MPI_Register_datarep_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *datarep;
		MPI_Datarep_conversion_function *read_conversion_fn;
		MPI_Datarep_conversion_function *write_conversion_fn;
		MPI_Datarep_extent_function *dtype_file_extent_fn;
		void *extra_state;
	};

	struct MPI_Request_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Request request;
	};

	struct MPI_Request_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_Request rc;
		int request;
	};

	struct MPI_Request_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Request *request;
	};

	struct MPI_Request_get_status_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Request request;
		int *flag;
		MPI_Status *status;
	};

	struct MPI_Rsend_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *ibuf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
	};

	struct MPI_Rsend_init_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Scan_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		void *recvbuf;
		int count;
		MPI_Datatype datatype;
		MPI_Op op;
		MPI_Comm comm;
	};

	struct MPI_Scatter_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int sendcount;
		MPI_Datatype sendtype;
		void *recvbuf;
		int recvcount;
		MPI_Datatype recvtype;
		int root;
		MPI_Comm comm;
	};

	struct MPI_Scatterv_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int *sendcounts;
		int *displs;
		MPI_Datatype sendtype;
		void *recvbuf;
		int recvcount;
		MPI_Datatype recvtype;
		int root;
		MPI_Comm comm;
	};

	struct MPI_Send_init_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Send_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
	};

	struct MPI_Sendrecv_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *sendbuf;
		int sendcount;
		MPI_Datatype sendtype;
		int dest;
		int sendtag;
		void *recvbuf;
		int recvcount;
		MPI_Datatype recvtype;
		int source;
		int recvtag;
		MPI_Comm comm;
		MPI_Status *status;
	};

	struct MPI_Sendrecv_replace_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int sendtag;
		int source;
		int recvtag;
		MPI_Comm comm;
		MPI_Status *status;
	};

	struct MPI_Ssend_init_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
		MPI_Request *request;
	};

	struct MPI_Ssend_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *buf;
		int count;
		MPI_Datatype datatype;
		int dest;
		int tag;
		MPI_Comm comm;
	};

	struct MPI_Start_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Request *request;
	};

	struct MPI_Startall_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		MPI_Request *array_of_requests;
	};

	struct MPI_Status_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Status *c_status;
		int *f_status;
	};

	struct MPI_Status_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *f_status;
		MPI_Status *c_status;
	};

	struct MPI_Status_set_cancelled_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Status *status;
		int flag;
	};

	struct MPI_Status_set_elements_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Status *status;
		MPI_Datatype datatype;
		int count;
	};

	struct MPI_Testall_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		MPI_Request *array_of_requests;
		int *flag;
		MPI_Status *array_of_statuses;
	};

	struct MPI_Testany_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		MPI_Request *array_of_requests;
		int *index;
		int *flag;
		MPI_Status *status;
	};

	struct MPI_Test_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Request *request;
		int *flag;
		MPI_Status *status;
	};

	struct MPI_Test_cancelled_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Status *status;
		int *flag;
	};

	struct MPI_Testsome_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int incount;
		MPI_Request *array_of_requests;
		int *outcount;
		int *array_of_indices;
		MPI_Status *array_of_statuses;
	};

	struct MPI_Topo_test_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Comm comm;
		int *status;
	};

	struct MPI_Type_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype datatype;
	};

	struct MPI_Type_commit_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype *type;
	};

	struct MPI_Type_contiguous_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_darray_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int size;
		int rank;
		int ndims;
		int *gsize_array;
		int *distrib_array;
		int *darg_array;
		int *psize_array;
		int order;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_f90_complex_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int p;
		int r;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_f90_integer_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int r;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_f90_real_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int p;
		int r;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_hindexed_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int *array_of_blocklengths;
		MPI_Aint *array_of_displacements;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_hvector_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int blocklength;
		MPI_Aint stride;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_keyval_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Type_copy_attr_function *type_copy_attr_fn;
		MPI_Type_delete_attr_function *type_delete_attr_fn;
		int *type_keyval;
		void *extra_state;
	};

	struct MPI_Type_create_indexed_block_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int blocklength;
		int *array_of_displacements;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_struct_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int *array_of_block_lengths;
		MPI_Aint *array_of_displacements;
		MPI_Datatype *array_of_types;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_subarray_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int ndims;
		int *size_array;
		int *subsize_array;
		int *start_array;
		int order;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_create_resized_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype oldtype;
		MPI_Aint lb;
		MPI_Aint extent;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_delete_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		int type_keyval;
	};

	struct MPI_Type_dup_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_extent_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		MPI_Aint *extent;
	};

	struct MPI_Type_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype *type;
	};

	struct MPI_Type_free_keyval_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *type_keyval;
	};

	struct MPI_Type_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_Datatype rc;
		int datatype;
	};

	struct MPI_Type_get_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		int type_keyval;
		void *attribute_val;
		int *flag;
	};

	struct MPI_Type_get_contents_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype mtype;
		int max_integers;
		int max_addresses;
		int max_datatypes;
		int *array_of_integers;
		MPI_Aint *array_of_addresses;
		MPI_Datatype *array_of_datatypes;
	};

	struct MPI_Type_get_envelope_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		int *num_integers;
		int *num_addresses;
		int *num_datatypes;
		int *combiner;
	};

	struct MPI_Type_get_extent_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		MPI_Aint *lb;
		MPI_Aint *extent;
	};

	struct MPI_Type_get_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		char *type_name;
		int *resultlen;
	};

	struct MPI_Type_get_true_extent_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype datatype;
		MPI_Aint *true_lb;
		MPI_Aint *true_extent;
	};

	struct MPI_Type_hindexed_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int *array_of_blocklengths;
		MPI_Aint *array_of_displacements;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_hvector_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int blocklength;
		MPI_Aint stride;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_indexed_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int *array_of_blocklengths;
		int *array_of_displacements;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_lb_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		MPI_Aint *lb;
	};

	struct MPI_Type_match_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int typeclass;
		int size;
		MPI_Datatype *type;
	};

	struct MPI_Type_set_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		int type_keyval;
		void *attr_val;
	};

	struct MPI_Type_set_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		char *type_name;
	};

	struct MPI_Type_size_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype type;
		int *size;
	};

	struct MPI_Type_struct_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int *array_of_blocklengths;
		MPI_Aint *array_of_displacements;
		MPI_Datatype *array_of_types;
		MPI_Datatype *newtype;
	};

	struct MPI_Type_ub_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Datatype mtype;
		MPI_Aint *ub;
	};

	struct MPI_Type_vector_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		int blocklength;
		int stride;
		MPI_Datatype oldtype;
		MPI_Datatype *newtype;
	};

	struct MPI_Unpack_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *inbuf;
		int insize;
		int *position;
		void *outbuf;
		int outcount;
		MPI_Datatype datatype;
		MPI_Comm comm;
	};

	struct MPI_Unpublish_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *service_name;
		MPI_Info info;
		char *port_name;
	};

	struct MPI_Unpack_external_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		char *datarep;
		void *inbuf;
		MPI_Aint insize;
		MPI_Aint *position;
		void *outbuf;
		int outcount;
		MPI_Datatype datatype;
	};

	struct MPI_Waitall_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		MPI_Request *array_of_requests;
		MPI_Status *array_of_statuses;
	};

	struct MPI_Waitany_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int count;
		MPI_Request *array_of_requests;
		int *index;
		MPI_Status *status;
	};

	struct MPI_Wait_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Request *request;
		MPI_Status *status;
	};

	struct MPI_Waitsome_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int incount;
		MPI_Request *array_of_requests;
		int *outcount;
		int *array_of_indices;
		MPI_Status *array_of_statuses;
	};

	struct MPI_Win_c2f_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
	};

	struct MPI_Win_call_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		int errorcode;
	};

	struct MPI_Win_complete_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
	};

	struct MPI_Win_create_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		void *base;
		MPI_Aint size;
		int disp_unit;
		MPI_Info info;
		MPI_Comm comm;
		MPI_Win *win;
	};

	struct MPI_Win_create_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win_errhandler_fn *function;
		MPI_Errhandler *errhandler;
	};

	struct MPI_Win_create_keyval_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win_copy_attr_function *win_copy_attr_fn;
		MPI_Win_delete_attr_function *win_delete_attr_fn;
		int *win_keyval;
		void *extra_state;
	};

	struct MPI_Win_delete_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		int win_keyval;
	};

	struct MPI_Win_f2c_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		MPI_Win rc;
		int win;
	};

	struct MPI_Win_fence_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int assert;
		MPI_Win win;
	};

	struct MPI_Win_free_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win *win;
	};

	struct MPI_Win_free_keyval_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int *win_keyval;
	};

	struct MPI_Win_get_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		int win_keyval;
		void *attribute_val;
		int *flag;
	};

	struct MPI_Win_get_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		MPI_Errhandler *errhandler;
	};

	struct MPI_Win_get_group_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		MPI_Group *group;
	};

	struct MPI_Win_get_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		char *win_name;
		int *resultlen;
	};

	struct MPI_Win_lock_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int lock_type;
		int rank;
		int assert;
		MPI_Win win;
	};

	struct MPI_Win_post_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group;
		int assert;
		MPI_Win win;
	};

	struct MPI_Win_set_attr_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		int win_keyval;
		void *attribute_val;
	};

	struct MPI_Win_set_errhandler_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		MPI_Errhandler errhandler;
	};

	struct MPI_Win_set_name_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		char *win_name;
	};

	struct MPI_Win_start_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Group group;
		int assert;
		MPI_Win win;
	};

	struct MPI_Win_test_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
		int *flag;
	};

	struct MPI_Win_unlock_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		int rank;
		MPI_Win win;
	};

	struct MPI_Win_wait_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		int rc;
		MPI_Win win;
	};

	struct MPI_Wtick_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		double rc;
	};

	struct MPI_Wtime_p{
		int   shim_id;
		char *srcfile;
		int   srcline;
		double rc;
	};

